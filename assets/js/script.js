//default map position
let map = L.map('map').setView([40, -95], 4);

L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);

//marker pins
const breweryIcon = {
    iconUrl: './assets/js/Brewery.png',
    iconSize: [40, 50]
}

const locationsIcon = {
    iconUrl: './assets/js/ClearBrew.png',
    iconSize: [80, 80]
}

const searchIcon = L.icon(locationsIcon)
const beerIcon = L.icon(breweryIcon)

const breweryOptions = {
    icon: beerIcon
}

const searchOptions = {
    icon: searchIcon
}

//uses the opencagedata api to search a set, grabs the latitude and longitude of the city to display breweries in the area
function searchCity() {
    let city = document.getElementById('cityInput').value;
    fetch(`https://api.opencagedata.com/geocode/v1/json?q=${city}&key=bbb05a8edb664fc99f7958790b747fa8`)
        .then(response => response.json())
        .then(data => {
            let lat = data.results[0].geometry.lat;
            let lng = data.results[0].geometry.lng;
            marker = L.marker([lat, lng], searchOptions).addTo(layerGroup);
            marker.on('click', onMarkerClick)
            map.setView([lat, lng], 10);
            const localBrew = `https://api.openbrewerydb.org/v1/breweries?by_dist=${lat},${lng}&per_page=10`
            fetch(localBrew)
                .then(response => response.json())
                .then(function (data) {
                    for (let i = 0; i < data.length; i++) {
                        displayBrew(data[i])
                    }
                })

        })
        .catch(error => {
            console.error('Error:', error);
        });
}

//once you click the marker generated by the searchCity function clears all markers
function onMarkerClick() {
    layerGroup.clearLayers();
}

//event listener for clicking map
map.on('click', onMapClick);
let popup = L.popup()

function onMapClick(e) {
        popup
            .setLatLng(e.latlng)
            .setContent('<p> Get started by searching a city or <br /> click on a beer for info about the Brewery!</p>')
            .openOn(map)
}

let layerGroup = L.layerGroup().addTo(map)

function displayBrew(data) {
    map.closePopup();
    marker = L.marker([data.latitude, data.longitude], breweryOptions).addTo(layerGroup) //insert coords
    marker.bindPopup(`<p>${data.name}<br /> ${data.brewery_type} <br /> ${data.phone}</p>`).openPopup
}

$('form').on('submit', function (event) {
    event.preventDefault();
    layerGroup.clearLayers();
    getAndSetBreweryLocation();
})

// Get the modal
let modal = document.getElementById("myModal");

// Get the button that opens the modal
let btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
let span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal 
btn.onclick = function () {
    modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function () {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function (event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}
